// This file is auto-generated by @hey-api/openapi-ts

import {
  type Client,
  type Options as ClientOptions,
  type TDataShape,
  formDataBodySerializer,
} from "@hey-api/client-fetch"
import { client as _heyApiClient } from "./client.gen"
import type {
  DeleteApiTyCustomerGroupIntIntsByIdData,
  DeleteApiTyCustomerGroupsByIdData,
  DeleteApiTyStocksByIdData,
  GetApiCustomerGetMasterData,
  GetApiCustomerGetOrderByIdByOrderIdData,
  GetApiCustomerGetPortfoliData,
  GetApiCustomerGetPortfoliResponse,
  GetApiCustomerGetProfileData,
  GetApiCustomerGetProfileResponse,
  GetApiCustomerGetTodayOrdersData,
  GetApiCustomerGetTodayOrdersResponse,
  GetApiGatewayStockByIdData,
  GetApiGatewayStockByIdResponse,
  GetApiGatewayStocksData,
  GetApiGatewayStocksResponse,
  GetApiMasterGetCustomersData,
  GetApiMasterGetCustomersResponse,
  GetApiMasterGetMasterInfoData,
  GetApiMasterGetMasterPortfolioData,
  GetApiMasterGetMasterPortfolioResponse,
  GetApiMasterGetOrderByIdByOrderIdData,
  GetApiMasterGetTodayOrdersData,
  GetApiMasterGetTodayOrdersResponse,
  GetApiMasterUserPortfolioByCustomerIdData,
  GetApiMasterUserPortfolioByCustomerIdResponse,
  GetApiStockPriceSourceGetStockPriceSourcesData,
  GetApiStockPriceSourceGetStockPriceSourcesResponse,
  GetApiTyCustomerGroupIntIntsByIdData,
  GetApiTyCustomerGroupIntIntsByIdResponse,
  GetApiTyCustomerGroupIntIntsData,
  GetApiTyCustomerGroupIntIntsResponse,
  GetApiTyCustomerGroupsByIdData,
  GetApiTyCustomerGroupsByIdResponse,
  GetApiTyCustomerGroupsData,
  GetApiTyCustomerGroupsResponse,
  GetApiTyFilesDownloadByIdData,
  GetApiTyStocksAll2Data,
  GetApiTyStocksByIdData,
  GetApiTyStocksByIdResponse,
  GetApiTyStocksData,
  GetApiTyStocksForCustommerData,
  GetApiTyStocksForCustommerResponse,
  GetApiTyStocksGetTimeData,
  GetApiTyStocksGetTimeResponse,
  GetApiTyStocksResponse,
  PostApiCustomerAddDocsData,
  PostApiCustomerAddTransferData,
  PostApiCustomerGetDocsData,
  PostApiCustomerGetDocsResponse,
  PostApiCustomerGetOrdersData,
  PostApiCustomerGetOrdersResponse,
  PostApiCustomerGetTransfersData,
  PostApiCustomerGetTransfersResponse,
  PostApiCustomerLoginCustomerData,
  PostApiCustomerLoginCustomerResponse,
  PostApiCustomerReqOrderData,
  PostApiCustomerReqOrderResponse,
  PostApiCustomerSendSmsToAllData,
  PostApiCustomerUpdateFData,
  PostApiMasterAcceptDocsData,
  PostApiMasterAcceptDocsResponse,
  PostApiMasterAcceptOrdersData,
  PostApiMasterAcceptTransferData,
  PostApiMasterAcceptTransferResponse,
  PostApiMasterAddAndAcceptDocsData,
  PostApiMasterAddAndAcceptTransferData,
  PostApiMasterAddCustomerData,
  PostApiMasterGetDocsData,
  PostApiMasterGetDocsResponse,
  PostApiMasterGetOrdersData,
  PostApiMasterGetOrdersResponse,
  PostApiMasterGetTransferData,
  PostApiMasterGetTransferResponse,
  PostApiMasterHashData,
  PostApiMasterLoginMasterData,
  PostApiMasterLoginMasterResponse,
  PostApiMasterRemoveCustomerData,
  PostApiMasterSmsBroadcastData,
  PostApiMasterUpdateCustomerData,
  PostApiMasterUpdateFData,
  PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeData,
  PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponse,
  PostApiStockPriceSourceAddStockPriceSourceData,
  PostApiStockPriceSourceAddStockPriceSourceResponse,
  PostApiStockPriceSourceDeleteStockData,
  PostApiStockPriceSourceDeleteStockResponse,
  PostApiStockPriceSourceEditStockPriceSourceData,
  PostApiStockPriceSourceEditStockPriceSourceResponse,
  PostApiTyCustomerGroupIntIntsData,
  PostApiTyCustomerGroupIntIntsResponse,
  PostApiTyCustomerGroupsData,
  PostApiTyCustomerGroupsResponse,
  PostApiTyFilesUploadData,
  PostApiTyFilesUploadResponse,
  PostApiTyStocksData,
  PostApiTyStocksResponse,
  PutApiCustomerLogoutData,
  PutApiCustomerResetPasswordData,
  PutApiMasterResetPasswordMasterData,
  PutApiTyCustomerGroupIntIntsByIdData,
  PutApiTyCustomerGroupsByIdData,
  PutApiTyStocksByIdData,
} from "./types.gen"

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

export class CustomerService {
  public static postApiCustomerLoginCustomer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerLoginCustomerData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiCustomerLoginCustomerResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/loginCustomer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static putApiCustomerLogout<ThrowOnError extends boolean = false>(
    options?: Options<PutApiCustomerLogoutData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/logout",
      ...options,
    })
  }

  public static putApiCustomerResetPassword<ThrowOnError extends boolean = false>(
    options?: Options<PutApiCustomerResetPasswordData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/resetPassword",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiCustomerUpdateF<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerUpdateFData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/UpdateF",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiCustomerGetMaster<ThrowOnError extends boolean = false>(
    options?: Options<GetApiCustomerGetMasterData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetMaster",
      ...options,
    })
  }

  public static getApiCustomerGetProfile<ThrowOnError extends boolean = false>(
    options?: Options<GetApiCustomerGetProfileData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiCustomerGetProfileResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetProfile",
      ...options,
    })
  }

  public static postApiCustomerReqOrder<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerReqOrderData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiCustomerReqOrderResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/ReqOrder",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiCustomerGetOrders<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerGetOrdersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiCustomerGetOrdersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetOrders",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiCustomerGetTodayOrders<ThrowOnError extends boolean = false>(
    options?: Options<GetApiCustomerGetTodayOrdersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiCustomerGetTodayOrdersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetTodayOrders",
      ...options,
    })
  }

  public static postApiCustomerGetDocs<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerGetDocsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiCustomerGetDocsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetDocs",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiCustomerAddDocs<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerAddDocsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/AddDocs",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiCustomerGetTransfers<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerGetTransfersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiCustomerGetTransfersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetTransfers",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiCustomerAddTransfer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerAddTransferData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/AddTransfer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiCustomerGetPortfoli<ThrowOnError extends boolean = false>(
    options?: Options<GetApiCustomerGetPortfoliData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiCustomerGetPortfoliResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetPortfoli",
      ...options,
    })
  }

  public static getApiCustomerGetOrderByIdByOrderId<ThrowOnError extends boolean = false>(
    options: Options<GetApiCustomerGetOrderByIdByOrderIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/GetOrderByID/{OrderID}",
      ...options,
    })
  }

  public static postApiCustomerSendSmsToAll<ThrowOnError extends boolean = false>(
    options?: Options<PostApiCustomerSendSmsToAllData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Customer/SendSmsToAll",
      ...options,
    })
  }
}

export class GatewayService {
  public static getApiGatewayStocks<ThrowOnError extends boolean = false>(
    options?: Options<GetApiGatewayStocksData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiGatewayStocksResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Gateway/stocks",
      ...options,
    })
  }

  public static getApiGatewayStockById<ThrowOnError extends boolean = false>(
    options: Options<GetApiGatewayStockByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiGatewayStockByIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Gateway/stock/{id}",
      ...options,
    })
  }
}

export class MasterService {
  public static postApiMasterLoginMaster<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterLoginMasterData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterLoginMasterResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/loginMaster",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static putApiMasterResetPasswordMaster<ThrowOnError extends boolean = false>(
    options?: Options<PutApiMasterResetPasswordMasterData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/resetPasswordMaster",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterHash<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterHashData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/Hash",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiMasterGetMasterInfo<ThrowOnError extends boolean = false>(
    options?: Options<GetApiMasterGetMasterInfoData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetMasterInfo",
      ...options,
    })
  }

  public static postApiMasterUpdateF<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterUpdateFData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/UpdateF",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterGetOrders<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterGetOrdersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterGetOrdersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetOrders",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiMasterGetTodayOrders<ThrowOnError extends boolean = false>(
    options?: Options<GetApiMasterGetTodayOrdersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiMasterGetTodayOrdersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetTodayOrders",
      ...options,
    })
  }

  public static postApiMasterGetDocs<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterGetDocsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterGetDocsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetDocs",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterGetTransfer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterGetTransferData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterGetTransferResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetTransfer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterAcceptTransfer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAcceptTransferData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterAcceptTransferResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AcceptTransfer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterAcceptDocs<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAcceptDocsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiMasterAcceptDocsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AcceptDocs",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterAcceptOrders<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAcceptOrdersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AcceptOrders",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterAddCustomer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAddCustomerData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AddCustomer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterRemoveCustomer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterRemoveCustomerData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/RemoveCustomer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterUpdateCustomer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterUpdateCustomerData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/UpdateCustomer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiMasterGetCustomers<ThrowOnError extends boolean = false>(
    options?: Options<GetApiMasterGetCustomersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiMasterGetCustomersResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetCustomers",
      ...options,
    })
  }

  public static getApiMasterGetOrderByIdByOrderId<ThrowOnError extends boolean = false>(
    options: Options<GetApiMasterGetOrderByIdByOrderIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetOrderByID/{OrderID}",
      ...options,
    })
  }

  public static getApiMasterUserPortfolioByCustomerId<ThrowOnError extends boolean = false>(
    options: Options<GetApiMasterUserPortfolioByCustomerIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiMasterUserPortfolioByCustomerIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/UserPortfolio/{CustomerID}",
      ...options,
    })
  }

  public static getApiMasterGetMasterPortfolio<ThrowOnError extends boolean = false>(
    options?: Options<GetApiMasterGetMasterPortfolioData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiMasterGetMasterPortfolioResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/GetMasterPortfolio",
      ...options,
    })
  }

  public static postApiMasterAddAndAcceptDocs<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAddAndAcceptDocsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AddAndAcceptDocs",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterAddAndAcceptTransfer<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterAddAndAcceptTransferData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/AddAndAcceptTransfer",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiMasterSmsBroadcast<ThrowOnError extends boolean = false>(
    options?: Options<PostApiMasterSmsBroadcastData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/Master/sms/broadcast",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }
}

export class StockPriceSourceService {
  public static postApiStockPriceSourceAddOrEditStockPriceSourceByCode<
    ThrowOnError extends boolean = false,
  >(options?: Options<PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeData, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).post<
      PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/StockPriceSource/AddOrEditStockPriceSourceByCode",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static getApiStockPriceSourceGetStockPriceSources<ThrowOnError extends boolean = false>(
    options?: Options<GetApiStockPriceSourceGetStockPriceSourcesData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiStockPriceSourceGetStockPriceSourcesResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/StockPriceSource/GetStockPriceSources",
      ...options,
    })
  }

  public static postApiStockPriceSourceAddStockPriceSource<ThrowOnError extends boolean = false>(
    options?: Options<PostApiStockPriceSourceAddStockPriceSourceData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiStockPriceSourceAddStockPriceSourceResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/StockPriceSource/AddStockPriceSource",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiStockPriceSourceEditStockPriceSource<ThrowOnError extends boolean = false>(
    options?: Options<PostApiStockPriceSourceEditStockPriceSourceData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiStockPriceSourceEditStockPriceSourceResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/StockPriceSource/EditStockPriceSource",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static postApiStockPriceSourceDeleteStock<ThrowOnError extends boolean = false>(
    options?: Options<PostApiStockPriceSourceDeleteStockData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiStockPriceSourceDeleteStockResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/StockPriceSource/DeleteStock",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }
}

export class TyCustomerGroupIntIntsService {
  public static getApiTyCustomerGroupIntInts<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyCustomerGroupIntIntsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiTyCustomerGroupIntIntsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroupIntInts",
      ...options,
    })
  }

  public static postApiTyCustomerGroupIntInts<ThrowOnError extends boolean = false>(
    options?: Options<PostApiTyCustomerGroupIntIntsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiTyCustomerGroupIntIntsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroupIntInts",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static deleteApiTyCustomerGroupIntIntsById<ThrowOnError extends boolean = false>(
    options: Options<DeleteApiTyCustomerGroupIntIntsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroupIntInts/{id}",
      ...options,
    })
  }

  public static getApiTyCustomerGroupIntIntsById<ThrowOnError extends boolean = false>(
    options: Options<GetApiTyCustomerGroupIntIntsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiTyCustomerGroupIntIntsByIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroupIntInts/{id}",
      ...options,
    })
  }

  public static putApiTyCustomerGroupIntIntsById<ThrowOnError extends boolean = false>(
    options: Options<PutApiTyCustomerGroupIntIntsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroupIntInts/{id}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }
}

export class TyCustomerGroupsService {
  public static getApiTyCustomerGroups<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyCustomerGroupsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiTyCustomerGroupsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroups",
      ...options,
    })
  }

  public static postApiTyCustomerGroups<ThrowOnError extends boolean = false>(
    options?: Options<PostApiTyCustomerGroupsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiTyCustomerGroupsResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroups",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static deleteApiTyCustomerGroupsById<ThrowOnError extends boolean = false>(
    options: Options<DeleteApiTyCustomerGroupsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroups/{id}",
      ...options,
    })
  }

  public static getApiTyCustomerGroupsById<ThrowOnError extends boolean = false>(
    options: Options<GetApiTyCustomerGroupsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetApiTyCustomerGroupsByIdResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroups/{id}",
      ...options,
    })
  }

  public static putApiTyCustomerGroupsById<ThrowOnError extends boolean = false>(
    options: Options<PutApiTyCustomerGroupsByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyCustomerGroups/{id}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }
}

export class TyFilesService {
  public static postApiTyFilesUpload<ThrowOnError extends boolean = false>(
    options?: Options<PostApiTyFilesUploadData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<
      PostApiTyFilesUploadResponse,
      unknown,
      ThrowOnError
    >({
      ...formDataBodySerializer,
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyFiles/upload",
      ...options,
      headers: {
        "Content-Type": null,
        ...options?.headers,
      },
    })
  }

  public static getApiTyFilesDownloadById<ThrowOnError extends boolean = false>(
    options: Options<GetApiTyFilesDownloadByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyFiles/download/{id}",
      ...options,
    })
  }
}

export class TyStocksService {
  public static getApiTyStocksForCustommer<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyStocksForCustommerData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiTyStocksForCustommerResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks/ForCustommer",
      ...options,
    })
  }

  public static getApiTyStocksGetTime<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyStocksGetTimeData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetApiTyStocksGetTimeResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks/GetTime",
      ...options,
    })
  }

  public static getApiTyStocksAll2<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyStocksAll2Data, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks/all2",
      ...options,
    })
  }

  public static getApiTyStocks<ThrowOnError extends boolean = false>(
    options?: Options<GetApiTyStocksData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<GetApiTyStocksResponse, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks",
      ...options,
    })
  }

  public static postApiTyStocks<ThrowOnError extends boolean = false>(
    options?: Options<PostApiTyStocksData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).post<PostApiTyStocksResponse, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }

  public static deleteApiTyStocksById<ThrowOnError extends boolean = false>(
    options: Options<DeleteApiTyStocksByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).delete<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks/{id}",
      ...options,
    })
  }

  public static getApiTyStocksById<ThrowOnError extends boolean = false>(
    options: Options<GetApiTyStocksByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<GetApiTyStocksByIdResponse, unknown, ThrowOnError>(
      {
        security: [
          {
            name: "Authorization",
            type: "apiKey",
          },
        ],
        url: "/api/TyStocks/{id}",
        ...options,
      },
    )
  }

  public static putApiTyStocksById<ThrowOnError extends boolean = false>(
    options: Options<PutApiTyStocksByIdData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).put<unknown, unknown, ThrowOnError>({
      security: [
        {
          name: "Authorization",
          type: "apiKey",
        },
      ],
      url: "/api/TyStocks/{id}",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    })
  }
}
