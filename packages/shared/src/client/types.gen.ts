// This file is auto-generated by @hey-api/openapi-ts

export type AddCustomerDto = {
  displayName?: string | null
  mobile?: string | null
  password?: string | null
  codeMelli?: string | null
  groupID?: number | null
  groupIntID?: number | null
  address?: string | null
  city?: string | null
  diffPrice?: number
  melliID?: string | null
  kasbsID?: string | null
  isActive?: boolean
  isBlocked?: boolean
  allowedDevices?: number | null
}

export type AutoMode = 0 | 1 | 2

export type ChangePasswordDto = {
  oldPassword?: string | null
  newPassword?: string | null
}

export type CustomerDto = {
  id?: number
  masterID?: number | null
  groupID?: number | null
  groupIntID?: number | null
  displayName?: string | null
  mobile?: string | null
  codeMelli?: string | null
  address?: string | null
  city?: string | null
  melliID?: string | null
  kasbsID?: string | null
  isActive?: boolean
  isBlocked?: boolean
  allowedDevices?: number | null
  connectedDevices?: number | null
  groupName?: string | null
  groupIntName?: string | null
}

export type CustomerGroupDto = {
  id?: number
  name?: string | null
  description?: string | null
  diffBuyPrice?: number | null
  diffSellPrice?: number | null
}

export type CustomerGroupIntDto = {
  id?: number
  name?: string | null
  description?: string | null
  diffBuyPrice?: number | null
  diffSellPrice?: number | null
}

export type CustomerLoginModel = {
  userID?: number
  customerID?: number
  masterID?: number | null
  username?: string | null
  displayName?: string | null
  mobile?: string | null
  codeMelli?: string | null
  address?: string | null
  city?: string | null
  groupID?: number | null
  melliID?: string | null
  kasbsID?: string | null
  diffBuyPrice?: number
  diffSellPrice?: number
  diffBuyPriceInt?: number
  diffSellPriceInt?: number
  ttkk?: string | null
}

export type CustomerStockDto = {
  stockID?: number
  stockName?: string | null
  lastUpdate?: string | null
  buyPrice?: number | null
  sellPrice?: number | null
  status?: StockStatus
}

export type DocumentDto = {
  id?: number
  createDate?: string
  sender?: string | null
  senderID?: number | null
  confirmer?: string | null
  confirmerID?: number | null
  orderStatus?: OrderStatus
  docId?: string | null
  title?: string | null
  tyOrderID?: number | null
}

export type Gidto = {
  gid?: string | null
  id?: number | null
  tf?: boolean | null
  str?: string | null
}

export type KeyData = {
  key?: string | null
  val?: string | null
}

export type LoginModel = {
  un?: string | null
  pw?: string | null
}

export type MasterLoginModel = {
  userID?: number
  masterID?: number
  username?: string | null
  name?: string | null
  rulls?: string | null
  aboutUs?: string | null
  mainPage?: string | null
  logoUrl?: string | null
  status?: MasterStatus
  ttkk?: string | null
}

export type MasterPortfolioDto = {
  tyStockID?: number | null
  stockName?: string | null
  volume?: number
}

export type MasterStatus = 1 | 2 | 3

export type OrderFc = {
  id?: number
  time?: string
  tyStockID?: number
  stockName?: string | null
  orderStatus?: OrderStatus
  side?: OrderSide
  price?: number
  volume?: number
  value?: number
  createDate?: string
}

export type OrderFm = {
  id?: number
  time?: string
  dateComplete?: string | null
  dlrName?: string | null
  dlrFamily?: string | null
  dlrPhone?: string | null
  dlrCustomer?: string | null
  userID?: number | null
  tyStockID?: number | null
  stockName?: string | null
  stockUnit?: StockUnit
  orderStatus?: OrderStatus
  side?: OrderSide
  price?: number
  basePrice?: number | null
  volume?: number
  value?: number
  createDate?: string
}

export type OrderSide = 1 | 2

export type OrderStatus = 1 | 2 | 3 | 4

export type OutFileModel = {
  id?: string | null
  adress?: string | null
}

export type PageDto = {
  start?: string | null
  end?: string | null
  countPerPage?: number
  pageNumber?: number
}

export type PortfolioDto = {
  tyStockID?: number | null
  stockName?: string | null
  volume?: number
  customerID?: number | null
  customerName?: string | null
}

export type ReqAcceptDocMasterDto = {
  docId?: string | null
  title?: string | null
  tyCustomerID?: number | null
  tyOrderID?: number | null
  value?: number
}

export type ReqAcceptTransMasterDto = {
  tyStockID?: number | null
  volume?: number
  tyCustomerID?: number | null
  description?: string | null
  mobile?: string | null
}

export type ReqDocDto = {
  docId?: string | null
  title?: string | null
  tyOrderID?: number | null
}

export type ReqOrderDto = {
  tyStockID?: number
  side?: OrderSide
  price?: number | null
  volume?: number | null
  value?: number | null
  mode?: RequestOrderMode
}

export type ReqTransferDto = {
  tyStockID?: number | null
  volume?: number
  name?: string | null
  description?: string | null
  mobile?: string | null
}

export type RequestOrderMode = 1 | 2

export type SmsMsgDto = {
  toAll?: boolean
  receivers?: Array<number> | null
  message?: string | null
}

export type StockDto = {
  id?: number
  name?: string | null
  description?: string | null
  price?: number | null
  diffBuyPrice?: number | null
  diffSellPrice?: number | null
  priceStep?: number | null
  diffPriceStep?: number | null
  status?: StockStatus
  mode?: AutoMode
  maxAutoMin?: number | null
  dateUpdate?: string
  minValue?: number | null
  maxValue?: number | null
  minVoume?: number
  maxVoume?: number
  isCountable?: boolean
  unitPriceRatio?: number
  decimalNumber?: number
  supply?: number
  priceSourceID?: number | null
  unit?: StockUnit
}

export type StockPriceSourceAddOrEditRequest = {
  sourceUrl?: string | null
  name?: string | null
  code?: string | null
  price?: number | null
}

export type StockPriceSourceAddRequest = {
  sourceUrl?: string | null
  name?: string | null
  code?: string | null
  price?: number
}

export type StockPriceSourceBaseBm = {
  id?: number
}

export type StockPriceSourceEditRequest = {
  id?: number
  sourceUrl?: string | null
  name?: string | null
  code?: string | null
  price?: number | null
}

export type StockPriceSourceResponse = {
  id?: number
  sourceUrl?: string | null
  name?: string | null
  code?: string | null
  price?: number
}

export type StockResponse = {
  id?: number
  name?: string | null
  description?: string | null
  balance?: number
  soldOutBalance?: number
  minVoume?: number | null
  maxVoume?: number | null
  price?: number
  minValue?: number | null
  maxValue?: number | null
  diffBuyPrice?: number | null
  diffSellPrice?: number | null
  priceStep?: number | null
  diffPriceStep?: number | null
  status?: StockStatus
  tradingMode?: StockTradingMode
  mode?: AutoMode
  maxAutoMin?: number | null
  unitPriceRatio?: number | null
  decimalNumber?: number | null
  priceSourceID?: number | null
}

export type StockStatus = 0 | 1 | 2 | 3

export type StockTradingMode = 0 | 1

export type StockUnit = 0 | 1 | 2

export type TransferDto = {
  id?: number
  createDate?: string
  sender?: string | null
  senderID?: number | null
  confirmer?: string | null
  confirmerID?: number | null
  stockName?: string | null
  tyStockID?: number | null
  volume?: number
  orderStatus?: OrderStatus
  customer?: string | null
  tyCustomerID?: number | null
  name?: string | null
  description?: string | null
  mobile?: string | null
}

export type Ufm = {
  dataVal?: Array<KeyData> | null
}

export type UpdateCustomerForMasterDto = {
  id?: number
  masterID?: number | null
  groupID?: number | null
  groupIntID?: number | null
  displayName?: string | null
  mobile?: string | null
  codeMelli?: string | null
  address?: string | null
  city?: string | null
  diffPrice?: number
  melliID?: string | null
  kasbsID?: string | null
  isActive?: boolean
  isBlocked?: boolean
  password?: string | null
  allowedDevices?: number | null
}

export type PostApiCustomerLoginCustomerData = {
  body?: LoginModel
  path?: never
  query?: never
  url: "/api/Customer/loginCustomer"
}

export type PostApiCustomerLoginCustomerResponses = {
  /**
   * Success
   */
  200: CustomerLoginModel
}

export type PostApiCustomerLoginCustomerResponse =
  PostApiCustomerLoginCustomerResponses[keyof PostApiCustomerLoginCustomerResponses]

export type PutApiCustomerLogoutData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Customer/logout"
}

export type PutApiCustomerLogoutResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PutApiCustomerResetPasswordData = {
  body?: ChangePasswordDto
  path?: never
  query?: never
  url: "/api/Customer/resetPassword"
}

export type PutApiCustomerResetPasswordResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiCustomerUpdateFData = {
  body?: Ufm
  path?: never
  query?: never
  url: "/api/Customer/UpdateF"
}

export type PostApiCustomerUpdateFResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiCustomerGetMasterData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Customer/GetMaster"
}

export type GetApiCustomerGetMasterResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiCustomerGetProfileData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Customer/GetProfile"
}

export type GetApiCustomerGetProfileResponses = {
  /**
   * Success
   */
  200: CustomerLoginModel
}

export type GetApiCustomerGetProfileResponse =
  GetApiCustomerGetProfileResponses[keyof GetApiCustomerGetProfileResponses]

export type PostApiCustomerReqOrderData = {
  body?: ReqOrderDto
  path?: never
  query?: never
  url: "/api/Customer/ReqOrder"
}

export type PostApiCustomerReqOrderResponses = {
  /**
   * Success
   */
  200: OrderFc
}

export type PostApiCustomerReqOrderResponse =
  PostApiCustomerReqOrderResponses[keyof PostApiCustomerReqOrderResponses]

export type PostApiCustomerGetOrdersData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Customer/GetOrders"
}

export type PostApiCustomerGetOrdersResponses = {
  /**
   * Success
   */
  200: Array<OrderFc>
}

export type PostApiCustomerGetOrdersResponse =
  PostApiCustomerGetOrdersResponses[keyof PostApiCustomerGetOrdersResponses]

export type GetApiCustomerGetTodayOrdersData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Customer/GetTodayOrders"
}

export type GetApiCustomerGetTodayOrdersResponses = {
  /**
   * Success
   */
  200: Array<OrderFc>
}

export type GetApiCustomerGetTodayOrdersResponse =
  GetApiCustomerGetTodayOrdersResponses[keyof GetApiCustomerGetTodayOrdersResponses]

export type PostApiCustomerGetDocsData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Customer/GetDocs"
}

export type PostApiCustomerGetDocsResponses = {
  /**
   * Success
   */
  200: Array<DocumentDto>
}

export type PostApiCustomerGetDocsResponse =
  PostApiCustomerGetDocsResponses[keyof PostApiCustomerGetDocsResponses]

export type PostApiCustomerAddDocsData = {
  body?: ReqDocDto
  path?: never
  query?: never
  url: "/api/Customer/AddDocs"
}

export type PostApiCustomerAddDocsResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiCustomerGetTransfersData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Customer/GetTransfers"
}

export type PostApiCustomerGetTransfersResponses = {
  /**
   * Success
   */
  200: Array<TransferDto>
}

export type PostApiCustomerGetTransfersResponse =
  PostApiCustomerGetTransfersResponses[keyof PostApiCustomerGetTransfersResponses]

export type PostApiCustomerAddTransferData = {
  body?: ReqTransferDto
  path?: never
  query?: never
  url: "/api/Customer/AddTransfer"
}

export type PostApiCustomerAddTransferResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiCustomerGetPortfoliData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Customer/GetPortfoli"
}

export type GetApiCustomerGetPortfoliResponses = {
  /**
   * Success
   */
  200: Array<PortfolioDto>
}

export type GetApiCustomerGetPortfoliResponse =
  GetApiCustomerGetPortfoliResponses[keyof GetApiCustomerGetPortfoliResponses]

export type GetApiCustomerGetOrderByIdByOrderIdData = {
  body?: never
  path: {
    OrderID: number
  }
  query?: never
  url: "/api/Customer/GetOrderByID/{OrderID}"
}

export type GetApiCustomerGetOrderByIdByOrderIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiCustomerSendSmsToAllData = {
  body?: never
  path?: never
  query?: {
    OrderID?: number
  }
  url: "/api/Customer/SendSmsToAll"
}

export type PostApiCustomerSendSmsToAllResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiGatewayStocksData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Gateway/stocks"
}

export type GetApiGatewayStocksResponses = {
  /**
   * Success
   */
  200: Array<CustomerStockDto>
}

export type GetApiGatewayStocksResponse =
  GetApiGatewayStocksResponses[keyof GetApiGatewayStocksResponses]

export type GetApiGatewayStockByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/Gateway/stock/{id}"
}

export type GetApiGatewayStockByIdResponses = {
  /**
   * Success
   */
  200: CustomerStockDto
}

export type GetApiGatewayStockByIdResponse =
  GetApiGatewayStockByIdResponses[keyof GetApiGatewayStockByIdResponses]

export type PostApiMasterLoginMasterData = {
  body?: LoginModel
  path?: never
  query?: never
  url: "/api/Master/loginMaster"
}

export type PostApiMasterLoginMasterResponses = {
  /**
   * Success
   */
  200: MasterLoginModel
}

export type PostApiMasterLoginMasterResponse =
  PostApiMasterLoginMasterResponses[keyof PostApiMasterLoginMasterResponses]

export type PutApiMasterResetPasswordMasterData = {
  body?: ChangePasswordDto
  path?: never
  query?: never
  url: "/api/Master/resetPasswordMaster"
}

export type PutApiMasterResetPasswordMasterResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterHashData = {
  body?: LoginModel
  path?: never
  query?: never
  url: "/api/Master/Hash"
}

export type PostApiMasterHashResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiMasterGetMasterInfoData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Master/GetMasterInfo"
}

export type GetApiMasterGetMasterInfoResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterUpdateFData = {
  body?: Ufm
  path?: never
  query?: never
  url: "/api/Master/UpdateF"
}

export type PostApiMasterUpdateFResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterGetOrdersData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Master/GetOrders"
}

export type PostApiMasterGetOrdersResponses = {
  /**
   * Success
   */
  200: Array<OrderFm>
}

export type PostApiMasterGetOrdersResponse =
  PostApiMasterGetOrdersResponses[keyof PostApiMasterGetOrdersResponses]

export type GetApiMasterGetTodayOrdersData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Master/GetTodayOrders"
}

export type GetApiMasterGetTodayOrdersResponses = {
  /**
   * Success
   */
  200: Array<OrderFm>
}

export type GetApiMasterGetTodayOrdersResponse =
  GetApiMasterGetTodayOrdersResponses[keyof GetApiMasterGetTodayOrdersResponses]

export type PostApiMasterGetDocsData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Master/GetDocs"
}

export type PostApiMasterGetDocsResponses = {
  /**
   * Success
   */
  200: Array<DocumentDto>
}

export type PostApiMasterGetDocsResponse =
  PostApiMasterGetDocsResponses[keyof PostApiMasterGetDocsResponses]

export type PostApiMasterGetTransferData = {
  body?: PageDto
  path?: never
  query?: never
  url: "/api/Master/GetTransfer"
}

export type PostApiMasterGetTransferResponses = {
  /**
   * Success
   */
  200: Array<TransferDto>
}

export type PostApiMasterGetTransferResponse =
  PostApiMasterGetTransferResponses[keyof PostApiMasterGetTransferResponses]

export type PostApiMasterAcceptTransferData = {
  body?: Gidto
  path?: never
  query?: never
  url: "/api/Master/AcceptTransfer"
}

export type PostApiMasterAcceptTransferResponses = {
  /**
   * Success
   */
  200: TransferDto
}

export type PostApiMasterAcceptTransferResponse =
  PostApiMasterAcceptTransferResponses[keyof PostApiMasterAcceptTransferResponses]

export type PostApiMasterAcceptDocsData = {
  body?: Gidto
  path?: never
  query?: never
  url: "/api/Master/AcceptDocs"
}

export type PostApiMasterAcceptDocsResponses = {
  /**
   * Success
   */
  200: TransferDto
}

export type PostApiMasterAcceptDocsResponse =
  PostApiMasterAcceptDocsResponses[keyof PostApiMasterAcceptDocsResponses]

export type PostApiMasterAcceptOrdersData = {
  body?: Gidto
  path?: never
  query?: never
  url: "/api/Master/AcceptOrders"
}

export type PostApiMasterAcceptOrdersResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterAddCustomerData = {
  body?: AddCustomerDto
  path?: never
  query?: never
  url: "/api/Master/AddCustomer"
}

export type PostApiMasterAddCustomerResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterRemoveCustomerData = {
  body?: Gidto
  path?: never
  query?: never
  url: "/api/Master/RemoveCustomer"
}

export type PostApiMasterRemoveCustomerResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterUpdateCustomerData = {
  body?: UpdateCustomerForMasterDto
  path?: never
  query?: never
  url: "/api/Master/UpdateCustomer"
}

export type PostApiMasterUpdateCustomerResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiMasterGetCustomersData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Master/GetCustomers"
}

export type GetApiMasterGetCustomersResponses = {
  /**
   * Success
   */
  200: Array<CustomerDto>
}

export type GetApiMasterGetCustomersResponse =
  GetApiMasterGetCustomersResponses[keyof GetApiMasterGetCustomersResponses]

export type GetApiMasterGetOrderByIdByOrderIdData = {
  body?: never
  path: {
    OrderID: number
  }
  query?: never
  url: "/api/Master/GetOrderByID/{OrderID}"
}

export type GetApiMasterGetOrderByIdByOrderIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiMasterUserPortfolioByCustomerIdData = {
  body?: never
  path: {
    CustomerID: number
  }
  query?: never
  url: "/api/Master/UserPortfolio/{CustomerID}"
}

export type GetApiMasterUserPortfolioByCustomerIdResponses = {
  /**
   * Success
   */
  200: Array<PortfolioDto>
}

export type GetApiMasterUserPortfolioByCustomerIdResponse =
  GetApiMasterUserPortfolioByCustomerIdResponses[keyof GetApiMasterUserPortfolioByCustomerIdResponses]

export type GetApiMasterGetMasterPortfolioData = {
  body?: never
  path?: never
  query?: never
  url: "/api/Master/GetMasterPortfolio"
}

export type GetApiMasterGetMasterPortfolioResponses = {
  /**
   * Success
   */
  200: Array<MasterPortfolioDto>
}

export type GetApiMasterGetMasterPortfolioResponse =
  GetApiMasterGetMasterPortfolioResponses[keyof GetApiMasterGetMasterPortfolioResponses]

export type PostApiMasterAddAndAcceptDocsData = {
  body?: ReqAcceptDocMasterDto
  path?: never
  query?: never
  url: "/api/Master/AddAndAcceptDocs"
}

export type PostApiMasterAddAndAcceptDocsResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterAddAndAcceptTransferData = {
  body?: ReqAcceptTransMasterDto
  path?: never
  query?: never
  url: "/api/Master/AddAndAcceptTransfer"
}

export type PostApiMasterAddAndAcceptTransferResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiMasterSmsBroadcastData = {
  body?: SmsMsgDto
  path?: never
  query?: never
  url: "/api/Master/sms/broadcast"
}

export type PostApiMasterSmsBroadcastResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeData = {
  body?: StockPriceSourceAddOrEditRequest
  path?: never
  query?: never
  url: "/api/StockPriceSource/AddOrEditStockPriceSourceByCode"
}

export type PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponses = {
  /**
   * Success
   */
  200: StockPriceSourceResponse
}

export type PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponse =
  PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponses[keyof PostApiStockPriceSourceAddOrEditStockPriceSourceByCodeResponses]

export type GetApiStockPriceSourceGetStockPriceSourcesData = {
  body?: never
  path?: never
  query?: never
  url: "/api/StockPriceSource/GetStockPriceSources"
}

export type GetApiStockPriceSourceGetStockPriceSourcesResponses = {
  /**
   * Success
   */
  200: Array<StockPriceSourceResponse>
}

export type GetApiStockPriceSourceGetStockPriceSourcesResponse =
  GetApiStockPriceSourceGetStockPriceSourcesResponses[keyof GetApiStockPriceSourceGetStockPriceSourcesResponses]

export type PostApiStockPriceSourceAddStockPriceSourceData = {
  body?: StockPriceSourceAddRequest
  path?: never
  query?: never
  url: "/api/StockPriceSource/AddStockPriceSource"
}

export type PostApiStockPriceSourceAddStockPriceSourceResponses = {
  /**
   * Success
   */
  200: StockPriceSourceResponse
}

export type PostApiStockPriceSourceAddStockPriceSourceResponse =
  PostApiStockPriceSourceAddStockPriceSourceResponses[keyof PostApiStockPriceSourceAddStockPriceSourceResponses]

export type PostApiStockPriceSourceEditStockPriceSourceData = {
  body?: StockPriceSourceEditRequest
  path?: never
  query?: never
  url: "/api/StockPriceSource/EditStockPriceSource"
}

export type PostApiStockPriceSourceEditStockPriceSourceResponses = {
  /**
   * Success
   */
  200: StockPriceSourceResponse
}

export type PostApiStockPriceSourceEditStockPriceSourceResponse =
  PostApiStockPriceSourceEditStockPriceSourceResponses[keyof PostApiStockPriceSourceEditStockPriceSourceResponses]

export type PostApiStockPriceSourceDeleteStockData = {
  body?: StockPriceSourceBaseBm
  path?: never
  query?: never
  url: "/api/StockPriceSource/DeleteStock"
}

export type PostApiStockPriceSourceDeleteStockResponses = {
  /**
   * Success
   */
  200: StockResponse
}

export type PostApiStockPriceSourceDeleteStockResponse =
  PostApiStockPriceSourceDeleteStockResponses[keyof PostApiStockPriceSourceDeleteStockResponses]

export type GetApiTyCustomerGroupIntIntsData = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyCustomerGroupIntInts"
}

export type GetApiTyCustomerGroupIntIntsResponses = {
  /**
   * Success
   */
  200: Array<CustomerGroupIntDto>
}

export type GetApiTyCustomerGroupIntIntsResponse =
  GetApiTyCustomerGroupIntIntsResponses[keyof GetApiTyCustomerGroupIntIntsResponses]

export type PostApiTyCustomerGroupIntIntsData = {
  body?: CustomerGroupIntDto
  path?: never
  query?: never
  url: "/api/TyCustomerGroupIntInts"
}

export type PostApiTyCustomerGroupIntIntsResponses = {
  /**
   * Success
   */
  200: CustomerGroupIntDto
}

export type PostApiTyCustomerGroupIntIntsResponse =
  PostApiTyCustomerGroupIntIntsResponses[keyof PostApiTyCustomerGroupIntIntsResponses]

export type DeleteApiTyCustomerGroupIntIntsByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroupIntInts/{id}"
}

export type DeleteApiTyCustomerGroupIntIntsByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyCustomerGroupIntIntsByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroupIntInts/{id}"
}

export type GetApiTyCustomerGroupIntIntsByIdResponses = {
  /**
   * Success
   */
  200: CustomerGroupIntDto
}

export type GetApiTyCustomerGroupIntIntsByIdResponse =
  GetApiTyCustomerGroupIntIntsByIdResponses[keyof GetApiTyCustomerGroupIntIntsByIdResponses]

export type PutApiTyCustomerGroupIntIntsByIdData = {
  body?: CustomerGroupIntDto
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroupIntInts/{id}"
}

export type PutApiTyCustomerGroupIntIntsByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyCustomerGroupsData = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyCustomerGroups"
}

export type GetApiTyCustomerGroupsResponses = {
  /**
   * Success
   */
  200: Array<CustomerGroupDto>
}

export type GetApiTyCustomerGroupsResponse =
  GetApiTyCustomerGroupsResponses[keyof GetApiTyCustomerGroupsResponses]

export type PostApiTyCustomerGroupsData = {
  body?: CustomerGroupDto
  path?: never
  query?: never
  url: "/api/TyCustomerGroups"
}

export type PostApiTyCustomerGroupsResponses = {
  /**
   * Success
   */
  200: CustomerGroupDto
}

export type PostApiTyCustomerGroupsResponse =
  PostApiTyCustomerGroupsResponses[keyof PostApiTyCustomerGroupsResponses]

export type DeleteApiTyCustomerGroupsByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroups/{id}"
}

export type DeleteApiTyCustomerGroupsByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyCustomerGroupsByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroups/{id}"
}

export type GetApiTyCustomerGroupsByIdResponses = {
  /**
   * Success
   */
  200: CustomerGroupDto
}

export type GetApiTyCustomerGroupsByIdResponse =
  GetApiTyCustomerGroupsByIdResponses[keyof GetApiTyCustomerGroupsByIdResponses]

export type PutApiTyCustomerGroupsByIdData = {
  body?: CustomerGroupDto
  path: {
    id: number
  }
  query?: never
  url: "/api/TyCustomerGroups/{id}"
}

export type PutApiTyCustomerGroupsByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type PostApiTyFilesUploadData = {
  body?: {
    File?: Blob | File
    Name?: string
    Description?: string
    IsPrivate?: boolean
  }
  path?: never
  query?: never
  url: "/api/TyFiles/upload"
}

export type PostApiTyFilesUploadResponses = {
  /**
   * Success
   */
  200: OutFileModel
}

export type PostApiTyFilesUploadResponse =
  PostApiTyFilesUploadResponses[keyof PostApiTyFilesUploadResponses]

export type GetApiTyFilesDownloadByIdData = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: "/api/TyFiles/download/{id}"
}

export type GetApiTyFilesDownloadByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyStocksForCustommerData = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyStocks/ForCustommer"
}

export type GetApiTyStocksForCustommerResponses = {
  /**
   * Success
   */
  200: Array<StockDto>
}

export type GetApiTyStocksForCustommerResponse =
  GetApiTyStocksForCustommerResponses[keyof GetApiTyStocksForCustommerResponses]

export type GetApiTyStocksGetTimeData = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyStocks/GetTime"
}

export type GetApiTyStocksGetTimeResponses = {
  /**
   * Success
   */
  200: string
}

export type GetApiTyStocksGetTimeResponse =
  GetApiTyStocksGetTimeResponses[keyof GetApiTyStocksGetTimeResponses]

export type GetApiTyStocksAll2Data = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyStocks/all2"
}

export type GetApiTyStocksAll2Responses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyStocksData = {
  body?: never
  path?: never
  query?: never
  url: "/api/TyStocks"
}

export type GetApiTyStocksResponses = {
  /**
   * Success
   */
  200: Array<StockDto>
}

export type GetApiTyStocksResponse = GetApiTyStocksResponses[keyof GetApiTyStocksResponses]

export type PostApiTyStocksData = {
  body?: StockDto
  path?: never
  query?: never
  url: "/api/TyStocks"
}

export type PostApiTyStocksResponses = {
  /**
   * Success
   */
  200: StockDto
}

export type PostApiTyStocksResponse = PostApiTyStocksResponses[keyof PostApiTyStocksResponses]

export type DeleteApiTyStocksByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyStocks/{id}"
}

export type DeleteApiTyStocksByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type GetApiTyStocksByIdData = {
  body?: never
  path: {
    id: number
  }
  query?: never
  url: "/api/TyStocks/{id}"
}

export type GetApiTyStocksByIdResponses = {
  /**
   * Success
   */
  200: StockDto
}

export type GetApiTyStocksByIdResponse =
  GetApiTyStocksByIdResponses[keyof GetApiTyStocksByIdResponses]

export type PutApiTyStocksByIdData = {
  body?: StockDto
  path: {
    id: number
  }
  query?: never
  url: "/api/TyStocks/{id}"
}

export type PutApiTyStocksByIdResponses = {
  /**
   * Success
   */
  200: unknown
}

export type ClientOptions = {
  baseUrl: `${string}://assets` | (string & {})
}
